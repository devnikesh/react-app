{"version":3,"sources":["Components/Header.js","firebase/config.js","hooks/useStorage.js","Components/ProgressBar.js","Components/UploadForm.js","hooks/useFirestore.js","Components/ImageGrid.js","Components/Modal.js","App.js","index.js"],"names":["Header","className","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","getStorage","projectFirestore","getFirestore","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","uploadBytesResumable","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","addDoc","ProgressBar","setFile","console","log","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","Collection","docs","setDocs","q","unsub","onSnapshot","querySnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","onClick","whileHover","opacity","layout","img","src","transition","delay","Modal","selectedImg","style","backgroundColor","classList","contains","alt","maxWidth","maxHeight","margin","y","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f111090.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container p-4 my-8\">\r\n        <h1 className=\"text-3xl mx-auto text-center\tfont-bold\ttext-gray-600\t\">\r\n          Upload Photo\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, serverTimestamp } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseApp = initializeApp({\r\n  apiKey: \"AIzaSyBQtVI_VwWJdIeQaArvhIyISlXh_R3lrGM\",\r\n  authDomain: \"photo-gallery-444da.firebaseapp.com\",\r\n  projectId: \"photo-gallery-444da\",\r\n  storageBucket: \"photo-gallery-444da.appspot.com\",\r\n  messagingSenderId: \"631790859688\",\r\n  appId: \"1: 631790859688:web:ed9132e1a5c55e2b59599d\",\r\n});\r\n\r\nconst projectStorage = getStorage(firebaseApp);\r\nconst projectFirestore = getFirestore(firebaseApp);\r\nconst timestamp = serverTimestamp;\r\n\r\nexport { projectFirestore, projectStorage, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\r\nimport { ref, getDownloadURL, uploadBytesResumable } from \"@firebase/storage\";\r\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //references\r\n    const storageRef = ref(projectStorage, file.name);\r\n    const collectionRef = collection(projectFirestore, \"images\");\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await getDownloadURL(storageRef);\r\n        const createdAt = serverTimestamp();\r\n        addDoc(collectionRef, { url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n  console.log(progress, url);\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar bg-red-300 h-1\tw-12\t\t\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const uploadImage = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n      console.log(file);\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please Select an Image file (png or jpeg)\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label className=\"cursor-pointer\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={uploadImage}\r\n          className=\"h-0 w-0 opacity-0\"\r\n        />\r\n        <span className=\"rounded-full h-10 w-10 flex items-center justify-center border-2 my-4 mx-auto text-gray-300\t\t\">\r\n          +\r\n        </span>\r\n      </label>\r\n      <div className=\"flex justify-center items-center flex-col\">\r\n        {error && <div>{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore, projectStorage } from \"../firebase/config\";\r\nimport { collection, onSnapshot, orderBy } from \"firebase/firestore\";\r\n\r\nconst useFirestore = (Collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const q = collection(projectFirestore, Collection);\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      //   orderBy(\"createdAt\", \"desc\");\r\n      let documents = [];\r\n      querySnapshot.forEach((doc) => {\r\n        documents.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setDocs(documents);\r\n    });\r\n    return () => unsub();\r\n  }, [Collection]);\r\n  return { docs };\r\n};\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  console.log(docs);\r\n  return (\r\n    <>\r\n      <div className=\"mx-auto my-8 grid grid-cols-3 gap-8\">\r\n        {docs &&\r\n          docs.map((doc) => {\r\n            return (\r\n              <motion.div\r\n                key={doc.id}\r\n                onClick={() => setSelectedImg(doc.url)}\r\n                whileHover={{ opacity: 1 }}\r\n                layout\r\n                className=\"opacity-70\"\r\n              >\r\n                <motion.img\r\n                  src={doc.url}\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ delay: 1 }}\r\n                ></motion.img>\r\n              </motion.div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n  const unFocus = (e) => {\r\n    if (e.target.classList.contains(\"modal\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  return (\r\n    <motion.div\r\n      className=\"fixed top-0 modal\t left-0\tw-full\t h-full\t\"\r\n      style={{ backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n      onClick={unFocus}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"Modal\"\r\n        className=\"border-4\tshadow-2xl\t\"\r\n        style={{ maxWidth: \"60%\", maxHeight: \"80%\", margin: \"60px auto\" }}\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      ></motion.img>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Components/Header\";\r\nimport UploadForm from \"./Components/UploadForm\";\r\nimport ImageGrid from \"./Components/ImageGrid\";\r\nimport Modal from \"./Components/Modal\";\r\n\r\nconst App = () => {\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n  return (\r\n    <div className=\"max-w-screen-md\tmx-auto\">\r\n      <Header />\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg} />\r\n      {selectedImg && (\r\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}